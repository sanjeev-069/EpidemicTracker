// <auto-generated />
using System;
using EpidemicTrackerApplication.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpidemicTrackerApplication.Migrations
{
    [DbContext(typeof(EpidemicTrackerDbContext))]
    [Migration("20200604141204_Tableseditingfinished")]
    partial class Tableseditingfinished
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasColumnName("DiseaseName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DiseaseType")
                        .IsRequired()
                        .HasColumnName("DiseaseType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DiseaseId");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnName("HospitalName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("HospitalPhoneNumber")
                        .IsRequired()
                        .HasColumnName("HospitalPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.HospitalAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnName("Area")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("Country")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Hospitalid")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnName("StreetNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnName("ZipCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("AddressId");

                    b.HasIndex("Hospitalid");

                    b.ToTable("HospitalAddresses");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gender")
                        .HasColumnName("Gender")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Roleid")
                        .HasColumnType("int");

                    b.HasKey("LoginId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Roleid");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Occupation", b =>
                {
                    b.Property<int>("OccupationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnName("Designation")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasColumnName("OrganisationName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Patientid")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("WorkType")
                        .IsRequired()
                        .HasColumnName("WorkType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("OccupationId");

                    b.HasIndex("Patientid")
                        .IsUnique();

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnName("Age")
                        .HasColumnType("int")
                        .HasMaxLength(3);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnName("Gender")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<int>("Loginid")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnName("PatientName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.HasIndex("Loginid");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.PatientAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnName("Area")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("Country")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Patientid")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnName("StreetNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnName("ZipCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("AddressId");

                    b.HasIndex("Patientid");

                    b.ToTable("PatientAddresses");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("RoleName")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Stage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentStage")
                        .IsRequired()
                        .HasColumnName("CurrentStage")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(15);

                    b.HasKey("StageId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.TreatmentDetail", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnName("AdmitDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsFatality")
                        .HasColumnName("IsFatality")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Prescription")
                        .HasColumnName("Prescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("RelievingDate")
                        .HasColumnName("RelievingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Stageid")
                        .HasColumnType("int");

                    b.HasKey("TreatmentId");

                    b.HasIndex("Stageid");

                    b.ToTable("TreatmentDetails");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.TreatmentRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Diseaseid")
                        .HasColumnType("int");

                    b.Property<int>("Hospitalid")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Treatmentid")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("Diseaseid");

                    b.HasIndex("Hospitalid");

                    b.HasIndex("PatientId");

                    b.HasIndex("Treatmentid");

                    b.ToTable("TreatmentRecords");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.UniqueIdType", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Patientid")
                        .HasColumnType("int");

                    b.Property<string>("UniqueidNumber")
                        .IsRequired()
                        .HasColumnName("UniqueIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueidType")
                        .IsRequired()
                        .HasColumnName("UniqueIdType")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("UniqueId");

                    b.HasIndex("Patientid")
                        .IsUnique();

                    b.ToTable("UniqueIdTypes");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.WorkAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnName("Area")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("Country")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Occupationid")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("State")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnName("StreetNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnName("ZipCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("AddressId");

                    b.HasIndex("Occupationid");

                    b.ToTable("WorkAddresses");
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.HospitalAddress", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Hospital", "Hospital")
                        .WithMany("HospitalAddresses")
                        .HasForeignKey("Hospitalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Login", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Role", "Role")
                        .WithMany("Logins")
                        .HasForeignKey("Roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Occupation", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Patient", "Patient")
                        .WithOne("Occupation")
                        .HasForeignKey("EpidemicTrackerApplication.Models.Occupation", "Patientid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.Patient", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Login", "Login")
                        .WithMany("Patients")
                        .HasForeignKey("Loginid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.PatientAddress", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Patient", "Patient")
                        .WithMany("PatientAddresses")
                        .HasForeignKey("Patientid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.TreatmentDetail", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Stage", "Stage")
                        .WithMany("TreatmentDetails")
                        .HasForeignKey("Stageid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.TreatmentRecord", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Disease", "Disease")
                        .WithMany("TreatmentRecords")
                        .HasForeignKey("Diseaseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpidemicTrackerApplication.Models.Hospital", "Hospital")
                        .WithMany("TreatmentRecords")
                        .HasForeignKey("Hospitalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpidemicTrackerApplication.Models.Patient", "Patient")
                        .WithMany("TreatmentRecords")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpidemicTrackerApplication.Models.TreatmentDetail", "TreatmentDetails")
                        .WithMany("TreatmentRecords")
                        .HasForeignKey("Treatmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.UniqueIdType", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Patient", "Patient")
                        .WithOne("UniqueIdType")
                        .HasForeignKey("EpidemicTrackerApplication.Models.UniqueIdType", "Patientid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpidemicTrackerApplication.Models.WorkAddress", b =>
                {
                    b.HasOne("EpidemicTrackerApplication.Models.Occupation", "Occupation")
                        .WithMany("WorkAddresses")
                        .HasForeignKey("Occupationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
